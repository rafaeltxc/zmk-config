/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <(-1)>;
            require-prior-idle-ms = <(-1)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            bindings = <
&kp Q  &kp W                  &kp F  &kp P         &kp B  &kp ESCAPE    &kp SQT        &kp J  &kp L         &kp U      &kp Y                        &kp BACKSPACE
&kp A  &hold_tap LCTRL LS(R)  &kp S  &kp T         &kp G  &kp TAB       &kp SEMICOLON  &kp N  &kp N         &kp E      &hold_tap RCTRL I            &kp O
&kp Z  &hold_tap LSHIFT X     &kp C  &kp D         &kp V  &kp COMMA     &kp PERIOD     &kp K  &kp H         &kp GRAVE  &hold_tap RIGHT_SHIFT SLASH  &kp RIGHT_ALT
                                     &kp LEFT_ALT  &mo 1  &kp SPACE     &kp ENTER      &mo 2  &kp LEFT_ALT
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none         &none           &kp TILDE  &kp ASTERISK  &kp AMPERSAND  &kp ASTERISK            &kp EQUAL  &kp N7        &kp N8        &kp N9        &none   &kp BSPC
&kp CAPSLOCK  &kp LCTRL       &kp CARET  &kp PERCENT   &kp DOLLAR     &kp NON_US_BACKSLASH    &kp N0     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0  &trans
&none         &kp LEFT_SHIFT  &kp HASH   &kp AT_SIGN   &kp EXCL       &kp SLASH               &kp MINUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &kp RIGHT_ALT
                                         &none         &trans         &kp SPACE               &kp RET    &trans        &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &none    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LPAR      &kp RPAR         &kp BSPC
&none  &kp LCTRL   &trans      &trans        &trans        &trans          &none    &kp LEFT          &kp DOWN           &kp UP_ARROW  &kp RIGHT_ARROW  &none
&none  &kp LSHIFT  &trans      &trans        &trans        &trans          &none    &kp LEFT_BRACE    &kp RIGHT_BRACE    &none         &none            &kp RIGHT_ALT
                               &none         &trans        &kp SPACE       &kp RET  &trans            &none
            >;
        };
    };
};
